// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PostSignUpReader is a Reader for the PostSignUp structure.
type PostSignUpReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostSignUpReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostSignUpOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostSignUpBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostSignUpUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostSignUpForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostSignUpNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPostSignUpConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostSignUpInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /sign-up] PostSignUp", response, response.Code())
	}
}

// NewPostSignUpOK creates a PostSignUpOK with default headers values
func NewPostSignUpOK() *PostSignUpOK {
	return &PostSignUpOK{}
}

/*
PostSignUpOK describes a response with status code 200, with default header values.

OK
*/
type PostSignUpOK struct {
}

// IsSuccess returns true when this post sign up o k response has a 2xx status code
func (o *PostSignUpOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post sign up o k response has a 3xx status code
func (o *PostSignUpOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post sign up o k response has a 4xx status code
func (o *PostSignUpOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post sign up o k response has a 5xx status code
func (o *PostSignUpOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post sign up o k response a status code equal to that given
func (o *PostSignUpOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post sign up o k response
func (o *PostSignUpOK) Code() int {
	return 200
}

func (o *PostSignUpOK) Error() string {
	return fmt.Sprintf("[POST /sign-up][%d] postSignUpOK", 200)
}

func (o *PostSignUpOK) String() string {
	return fmt.Sprintf("[POST /sign-up][%d] postSignUpOK", 200)
}

func (o *PostSignUpOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostSignUpBadRequest creates a PostSignUpBadRequest with default headers values
func NewPostSignUpBadRequest() *PostSignUpBadRequest {
	return &PostSignUpBadRequest{}
}

/*
PostSignUpBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostSignUpBadRequest struct {
}

// IsSuccess returns true when this post sign up bad request response has a 2xx status code
func (o *PostSignUpBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post sign up bad request response has a 3xx status code
func (o *PostSignUpBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post sign up bad request response has a 4xx status code
func (o *PostSignUpBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post sign up bad request response has a 5xx status code
func (o *PostSignUpBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post sign up bad request response a status code equal to that given
func (o *PostSignUpBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post sign up bad request response
func (o *PostSignUpBadRequest) Code() int {
	return 400
}

func (o *PostSignUpBadRequest) Error() string {
	return fmt.Sprintf("[POST /sign-up][%d] postSignUpBadRequest", 400)
}

func (o *PostSignUpBadRequest) String() string {
	return fmt.Sprintf("[POST /sign-up][%d] postSignUpBadRequest", 400)
}

func (o *PostSignUpBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostSignUpUnauthorized creates a PostSignUpUnauthorized with default headers values
func NewPostSignUpUnauthorized() *PostSignUpUnauthorized {
	return &PostSignUpUnauthorized{}
}

/*
PostSignUpUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostSignUpUnauthorized struct {
}

// IsSuccess returns true when this post sign up unauthorized response has a 2xx status code
func (o *PostSignUpUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post sign up unauthorized response has a 3xx status code
func (o *PostSignUpUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post sign up unauthorized response has a 4xx status code
func (o *PostSignUpUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post sign up unauthorized response has a 5xx status code
func (o *PostSignUpUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post sign up unauthorized response a status code equal to that given
func (o *PostSignUpUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post sign up unauthorized response
func (o *PostSignUpUnauthorized) Code() int {
	return 401
}

func (o *PostSignUpUnauthorized) Error() string {
	return fmt.Sprintf("[POST /sign-up][%d] postSignUpUnauthorized", 401)
}

func (o *PostSignUpUnauthorized) String() string {
	return fmt.Sprintf("[POST /sign-up][%d] postSignUpUnauthorized", 401)
}

func (o *PostSignUpUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostSignUpForbidden creates a PostSignUpForbidden with default headers values
func NewPostSignUpForbidden() *PostSignUpForbidden {
	return &PostSignUpForbidden{}
}

/*
PostSignUpForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PostSignUpForbidden struct {
}

// IsSuccess returns true when this post sign up forbidden response has a 2xx status code
func (o *PostSignUpForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post sign up forbidden response has a 3xx status code
func (o *PostSignUpForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post sign up forbidden response has a 4xx status code
func (o *PostSignUpForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post sign up forbidden response has a 5xx status code
func (o *PostSignUpForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post sign up forbidden response a status code equal to that given
func (o *PostSignUpForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the post sign up forbidden response
func (o *PostSignUpForbidden) Code() int {
	return 403
}

func (o *PostSignUpForbidden) Error() string {
	return fmt.Sprintf("[POST /sign-up][%d] postSignUpForbidden", 403)
}

func (o *PostSignUpForbidden) String() string {
	return fmt.Sprintf("[POST /sign-up][%d] postSignUpForbidden", 403)
}

func (o *PostSignUpForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostSignUpNotFound creates a PostSignUpNotFound with default headers values
func NewPostSignUpNotFound() *PostSignUpNotFound {
	return &PostSignUpNotFound{}
}

/*
PostSignUpNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PostSignUpNotFound struct {
}

// IsSuccess returns true when this post sign up not found response has a 2xx status code
func (o *PostSignUpNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post sign up not found response has a 3xx status code
func (o *PostSignUpNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post sign up not found response has a 4xx status code
func (o *PostSignUpNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post sign up not found response has a 5xx status code
func (o *PostSignUpNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post sign up not found response a status code equal to that given
func (o *PostSignUpNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the post sign up not found response
func (o *PostSignUpNotFound) Code() int {
	return 404
}

func (o *PostSignUpNotFound) Error() string {
	return fmt.Sprintf("[POST /sign-up][%d] postSignUpNotFound", 404)
}

func (o *PostSignUpNotFound) String() string {
	return fmt.Sprintf("[POST /sign-up][%d] postSignUpNotFound", 404)
}

func (o *PostSignUpNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostSignUpConflict creates a PostSignUpConflict with default headers values
func NewPostSignUpConflict() *PostSignUpConflict {
	return &PostSignUpConflict{}
}

/*
PostSignUpConflict describes a response with status code 409, with default header values.

Conflict
*/
type PostSignUpConflict struct {
}

// IsSuccess returns true when this post sign up conflict response has a 2xx status code
func (o *PostSignUpConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post sign up conflict response has a 3xx status code
func (o *PostSignUpConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post sign up conflict response has a 4xx status code
func (o *PostSignUpConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this post sign up conflict response has a 5xx status code
func (o *PostSignUpConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this post sign up conflict response a status code equal to that given
func (o *PostSignUpConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the post sign up conflict response
func (o *PostSignUpConflict) Code() int {
	return 409
}

func (o *PostSignUpConflict) Error() string {
	return fmt.Sprintf("[POST /sign-up][%d] postSignUpConflict", 409)
}

func (o *PostSignUpConflict) String() string {
	return fmt.Sprintf("[POST /sign-up][%d] postSignUpConflict", 409)
}

func (o *PostSignUpConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostSignUpInternalServerError creates a PostSignUpInternalServerError with default headers values
func NewPostSignUpInternalServerError() *PostSignUpInternalServerError {
	return &PostSignUpInternalServerError{}
}

/*
PostSignUpInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostSignUpInternalServerError struct {
}

// IsSuccess returns true when this post sign up internal server error response has a 2xx status code
func (o *PostSignUpInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post sign up internal server error response has a 3xx status code
func (o *PostSignUpInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post sign up internal server error response has a 4xx status code
func (o *PostSignUpInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post sign up internal server error response has a 5xx status code
func (o *PostSignUpInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post sign up internal server error response a status code equal to that given
func (o *PostSignUpInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post sign up internal server error response
func (o *PostSignUpInternalServerError) Code() int {
	return 500
}

func (o *PostSignUpInternalServerError) Error() string {
	return fmt.Sprintf("[POST /sign-up][%d] postSignUpInternalServerError", 500)
}

func (o *PostSignUpInternalServerError) String() string {
	return fmt.Sprintf("[POST /sign-up][%d] postSignUpInternalServerError", 500)
}

func (o *PostSignUpInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
